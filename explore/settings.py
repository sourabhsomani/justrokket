"""
Django settings for explore project.

Generated by 'django-admin startproject' using Django 1.10.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'gepoqxf$g7)*1t+22d5lx)=z#((ybetzq!zzaixclo4@e6_$fr'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


ALLOWED_HOSTS = [
    'localhost:8000',
    'localhost:9000',
    'beta.justrokket.com',
    'www.justrokket.com',
    'justrokket.com',
    '127.0.0.1'
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'crispy_forms',
    'django.contrib.humanize',
    'main',
    # 'admin_reorder',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    'import_export',
    'qa',
    'taggit',
    'hitcount',
    'django_markdown',
    'storages',
]


SOCIALACCOUNT_PROVIDERS = {
    'facebook': {
        'METHOD': 'js_sdk',
        'SCOPE': ['email', 'public_profile', 'user_friends'],
        'AUTH_PARAMS': {},
        'FIELDS': [
            'id',
            'email',
            'name',
            'first_name',
            'last_name',
            'verified',
            'locale',
            'timezone',
            'link',
            'gender',
            'updated_time',
        ],
        'EXCHANGE_TOKEN': True,
        'VERIFIED_EMAIL': True,
        'VERSION': 'v2.8',
    },
}

SOCIALACCOUNT_EMAIL_VERIFICATION = False

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'admin_reorder.middleware.ModelAdminReorder',
]

ROOT_URLCONF = 'explore.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'main.context_processors.login_form',
                'main.context_processors.username',

            ],
        },
    },
]

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    # 'allauth.account.auth_backends.AuthenticationBackend',
)

WSGI_APPLICATION = 'explore.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

if 'RDS_DB_NAME' in os.environ:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.environ['RDS_DB_NAME'],
            'USER': os.environ['RDS_USERNAME'],
            'PASSWORD': os.environ['RDS_PASSWORD'],
            'HOST': os.environ['RDS_HOSTNAME'],
            'PORT': os.environ['RDS_PORT'],
        }
    }


else :
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }

# DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.sqlite3',
#             'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#         }
#     }

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
]



#blah





# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
LOGIN_URL = '/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = '/media/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
STATIC_ROOT = os.path.join(BASE_DIR, "static/")
CRISPY_TEMPLATE_PACK = 'bootstrap3'


# ADMIN_REORDER = (

#     # Rename app
#     {'app': 'auth', 'label': 'Authorisation'},


#     # models with custom name
#     {'app': 'main', 'label': 'General', 'models': (
#         'main.City',
#         'main.State',
#         'main.District',
#         'main.ApprovalPeriod',
#         'main.Newsletter',
#     )},

# # models with custom name
#     {'app': 'main', 'label': 'College', 'models': (
#         'main.College',
#         'main.GAScore',
#     )},


# # models with custom name
#     {'app': 'main', 'label': 'Qualification', 'models': (
#         'main.Qualification',
#         'main.CollegeQualification',
#     )},

# # models with custom name
#     {'app': 'main', 'label': 'Course', 'models': (
#         'main.Course',
#         'main.CollegeCourse',
#     )},


# # models with custom name
#     {'app': 'main', 'label': 'Exam', 'models': (
#         'main.CompetitiveExam',
#         'main.QualifyingExam',
#         'main.District',
#     )},

# # models with custom name
#     {'app': 'main', 'label': 'Static', 'models': (
#         'main.Rec_app',
#         'main.AFCR',
#         'main.GeneralKeyword',
#         'main.SpecializedKeyword',
#         'main.StaticText',
#         'main.StatementGroup',
#         'main.EmailTemplate',
#     )},


# # models with custom name
#     {'app': 'main', 'label': 'Analytics', 'models': (
#         'main.Search',
#         'main.Selection',
#         'main.SpecializedKeyword',
#     )},


# # models with custom name
#     {'app': 'main', 'label': 'Website', 'models': (
#         'main.PartnerCollege',
#         'main.Rokketeer',
#         'main.BlogPost',
#     )},


# # models with custom name
#     {'app': 'main', 'label': 'Events', 'models': (
#         'main.Event1',
#         'main.Event2',
#     )},

# # models with custom name
#     {'app': 'main', 'label': 'System', 'models': (
#         'main.OTP',
#         'main.Profile',
#         'main.Image',
#         'main.Configuration',
#     )},

#     {'app': 'main', 'label': 'Payment', 'models': (
#         'main.Month',
#         'main.Order',
#     )},

#     {'app': 'socialaccount', 'label': 'SocialAccount', 'models': (
#         'socialaccount.socialaccount',
#         'socialaccount.socialtoken'
#         'socialaccount.socialapp'
#     )},
# )

SITE_ID = 26
ACCOUNT_ADAPTER = 'main.adapters.AccountAdapter'
TEST_SITE_URL = "https://test.ccavenue.com/transaction/transaction.do?command=initiateTransaction"
PROD_SITE_URL = "https://secure.ccavenue.com/transaction/transaction.do?command=initiateTransaction"
MERCHANT_ID = "121888"
TEST_ACCESS_CODE = "AVLT69EB43CE98TLEC"
TEST_WORKING_KEY = "AB0BC34257CC908376CAFAB78F0732B2"
BASE_URL = "http://alpha.justrokket.com"



QA_SETTINGS = {
    'qa_messages': True,
    'qa_description_optional': False,
    'reputation': {
        'CREATE_QUESTION': 0,
        'CREATE_ANSWER': 0,
        'CREATE_ANSWER_COMMENT': 0,
        'CREATE_QUESTION_COMMENT': 0,
        'ACCEPT_ANSWER': 0,
        'UPVOTE_QUESTION': 0,
        'UPVOTE_ANSWER': 0,
        'DOWNVOTE_QUESTION': 0,
        'DOWNVOTE_ANSWER': 0,
    }
}


# dev
# SOCIAL_AUTH_FACEBOOK_KEY = '2210708758954510'  # App ID
# SOCIAL_AUTH_FACEBOOK_SECRET ='9915f053b458e7ae46609d7555b16a43' #app key


#facebook production

SOCIAL_AUTH_FACEBOOK_KEY = '187560551789381'  # App ID
SOCIAL_AUTH_FACEBOOK_SECRET ='227dc58ce5a76cf2ea1503fb7e2a0024' #app key





AWS_ACCESS_KEY_ID = "AKIAIRJHVVKZP7BB22HQ"
AWS_SECRET_ACCESS_KEY = "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"
AWS_STORAGE_BUCKET_NAME =  'justrokket1-bucket'
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}
AWS_LOCATION = 'static'


# STATIC_URL = 'https://%s/%s/' % (AWS_S3_CUSTOM_DOMAIN, AWS_LOCATION)
# STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
# DEFAULT_FILE_STORAGE = 'explore.storage_backends.MediaStorage'
